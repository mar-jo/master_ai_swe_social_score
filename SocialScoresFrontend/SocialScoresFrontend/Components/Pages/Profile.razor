@page "/profile/{id:int}";
@using SocialScoresFrontend.Components.Infra.Requests
@using SocialScoresFrontend.Components.Infra.Utils
@using SocialScoresFrontend.Components.Models
@inject AccountRequests AccountRequests
@inject PostRequests PostRequests
@inject NavigationManager Navigation

<h3>Profile</h3>

@if(loaded != null)
{
    <div>
        <h4>Account Details</h4>
        <p><strong>Username:</strong> @loaded?.Username</p>
        <p><strong>Email:</strong> @loaded?.Email</p>
        <p><UpDownVoteComponent Account="loaded" /></p>
    </div>

    <button class="btn btn-primary" @onclick="NavigateToNewPost">
        <i class="fa fa-plus"></i> New Post
    </button>

    <!-- Posts Section -->
    <div>
        <h4>User Posts</h4>
        @if (posts != null && posts?.Length != 0)
        {
            foreach (var post in posts)
            {
                <div class="post">
                    <img src="/favicon.png" alt="Post image" class="post-image" />
                    <p class="caption">@post.Text</p>
                    <p class="caption">@post.TimeCreated.ToShortDateString()</p>
                </div>
            }
        }
        else
        {
            <p>No posts available.</p>
        }
    </div>
}
else
{
	<p>Loading...</p>
}

@code {
	[Parameter]
	public int? Id { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Assert.NotNull(Id, "The Id provided to the pofile page was not valid");
		loaded = await AccountRequests.GetAccount(Id!.Value);

		posts = PostRequests.GetPostsForAccount(Id.Value);
	}

    private void NavigateToNewPost()
    {
        Navigation.NavigateTo("/newpost/"+Id);
    }

	private Account? loaded;
	private Post[]? posts;
}
