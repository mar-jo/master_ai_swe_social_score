name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - Development
      - Frontend
  pull_request:
    branches:
      - main
      - Development
      - Frontend

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest discover -s tests

      - name: Upload test results (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: .pytest_cache/

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/socialscores:latest
          
      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: SocialScoresFrontend/.
          file: SocialScoresFrontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/socialscoresfrontend:latest
